<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cystrix.blog.dao.CategoryDao">
    <sql id="tb">`category`</sql>
    <sql id="baseCols">`id`,`name`,`create_time`,`update_time`,`is_delete`</sql>

    <insert id="insert" parameterType="com.cystrix.blog.entity.Category" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO <include refid="tb"/> (<include refid="baseCols"/>)
        VALUE (NULL, #{name}, #{createTime}, #{updateTime}, 0)
    </insert>

    <update id="update" parameterType="com.cystrix.blog.entity.Category">
        UPDATE <include refid="tb"/>
        <set>
            <if test="name != null">`name` = #{name},</if>
            <if test="updateTime != null">`update_time` = #{updateTime},</if>
        </set>
        WHERE `id` = #{id} AND `is_delete` = 0
    </update>

    <select id="selectCategoryById" resultType="com.cystrix.blog.entity.Category">
        SELECT <include refid="baseCols"/> FROM <include refid="tb"/> WHERE `id` = #{categoryId} AND `is_delete` = 0
    </select>

    <update id="deleteById" parameterType="integer">
        UPDATE <include refid="tb"/> SET `is_delete` = 1 WHERE `id` = #{id}
    </update>
    
    <select id="selectPage"  resultType="com.cystrix.blog.entity.Category">
        SELECT  <include refid="baseCols"/> FROM <include refid="tb"/>
         WHERE `is_delete` = 0
        LIMIT #{pageSize}  OFFSET #{offset}
    </select>

    <select id="selectCategoryListByIds"   resultType="com.cystrix.blog.entity.Category">
        SELECT <include refid="baseCols"/> FROM <include refid="tb"/>
        WHERE `id`
        <foreach collection="ids" item="id" open="IN (" close=")" separator=",">
            #{id}
        </foreach>
        AND `is_delete` = 0
    </select>

    <select id="categoryTree" resultType="com.cystrix.blog.entity.Category" parameterType="integer">
        with recursive category_tree as (
            select id, pid, name, create_time, 1 as level
            from category where id = #{id} and  is_delete != 1
            union
            select c.id, c.pid, c.name, c.create_time, ct.level + 1
            from category c join category_tree ct on ct.id = c.pid
            where c.is_delete != 1 and c.pid is not null )
            select * from category_tree
    </select>
</mapper>